/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace de.dfki.tecs.robot.baxter
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class GripperEvent : TBase
  {
    private Limb _limb;
    private Gripper_state _action;

    /// <summary>
    /// 
    /// <seealso cref="Limb"/>
    /// </summary>
    public Limb Limb
    {
      get
      {
        return _limb;
      }
      set
      {
        __isset.limb = true;
        this._limb = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="Gripper_state"/>
    /// </summary>
    public Gripper_state Action
    {
      get
      {
        return _action;
      }
      set
      {
        __isset.action = true;
        this._action = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool limb;
      public bool action;
    }

    public GripperEvent() {
      this._limb = (Limb)1;
      this._action = (Gripper_state)1;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Limb = (Limb)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Action = (Gripper_state)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GripperEvent");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.limb) {
        field.Name = "limb";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Limb);
        oprot.WriteFieldEnd();
      }
      if (__isset.action) {
        field.Name = "action";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Action);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GripperEvent(");
      sb.Append("Limb: ");
      sb.Append(Limb);
      sb.Append(",Action: ");
      sb.Append(Action);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
